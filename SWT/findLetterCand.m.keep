function [CCcand,maxCCcol,minCCcol,maxCCrow,minCCrow,medCC,avgRGB,b_avgRGB,avgHSV,b_avgHSV,avgGRAY,b_avgGRAY] = findLetterCand(L,CCnum,W,Irgb,P,mode)

dontDrop = 0;
if nargin > 5
    if mode == 1
        dontDrop = 1;
    end
end       

Ir = Irgb(:,:,1);Ib = Irgb(:,:,2);Ig = Irgb(:,:,3);
Ihsv = rgb2hsv(Irgb); Ih = Ihsv(:,:,1);Is = Ihsv(:,:,2);Iv = Ihsv(:,:,3);
Igray = rgb2gray(Irgb);

Lcand = ones(CCnum,1);
CCavg = zeros(CCnum,1);
CCvar = zeros(CCnum,1);
avgRGB = zeros(CCnum,3);
b_avgRGB = zeros(CCnum,3);
avgHSV = zeros(CCnum,3);
b_avgHSV = zeros(CCnum,3);
avgGRAY = zeros(CCnum,1);
b_avgGRAY = zeros(CCnum,1);
for cc = 1:CCnum

    %reject CC with small/large dimensions
    if Lcand(cc)
        clear CCr CCc CCw        
        [CCr,CCc] = find(L==cc);
        CCw = W(L==cc)';
        maxCCc = max(CCc);
        minCCc = min(CCc);
        maxCCr = max(CCr);
        minCCr = min(CCr);
        CCmed = median(CCw);

        if max(maxCCc-minCCc,maxCCr-minCCr)<P.minDim ||  ...
                max(maxCCc-minCCc,maxCCr-minCCr)>P.maxDim
            Lcand(cc) = 0;

        end
    end
    
    
    %reject CC with large variance
    if Lcand(cc)
        CCavg(cc) = mean2(CCw);
        CCvar(cc) = std2(CCw);

        if CCvar(cc)/(CCavg(cc)+eps) > P.varAvgRatio
            Lcand(cc) = 0;
        end
    end

    %reject CC with large aspect ratio
    if Lcand(cc)
        d_col = maxCCc-minCCc;
        d_row = maxCCr-minCCr;
        if max(d_col,d_row)/(min(d_col,d_row)+eps) > P.aspectRatio
            Lcand(cc) = 0;
        elseif (max(d_col,d_row)/(min(d_col,d_row)+eps) > P.condWidthToStroke) && ...
                (d_col/(CCmed+eps) > P.widthToSrokeRatio || ...
                d_row/(CCmed+eps) > P.highToStrokeRatio)
            Lcand(cc) = 0;
        else
            maxH = maxCCr-minCCr;
            maxW = maxCCc-minCCc;
            for ang = (0.5:0.5:3.5)*pi/8
                R = [cos(ang) sin(ang);-sin(ang),cos(ang)];
                Rcc = [CCr,CCc]*R;
                maxRccr = max(Rcc(:,1));
                minRccr = min(Rcc(:,1));
                maxRccc = max(Rcc(:,2));
                minRccc = min(Rcc(:,2));
                maxH = max(maxH,maxRccr-minRccr);
                maxW = max(maxW,maxRccc-minRccc);
                d_col = maxRccc-minRccc;
                d_row = maxRccr-minRccr;
                if max(d_col,d_row)/(min(d_col,d_row)+eps) > P.aspectRatio
                    Lcand(cc) = 0 | dontDrop;
                elseif (max(d_col,d_row)/(min(d_col,d_row)+eps) > P.condWidthToStroke) && ...
                        (d_col/(CCmed+eps) > P.widthToSrokeRatio || ...
                        d_row/(CCmed+eps) > P.highToStrokeRatio)

                    Lcand(cc) = 0 | dontDrop;
                end
            end

            if CCmed/(maxH+eps) > P.StrokeToMaxHighRatio
                Lcand(cc) = 0 | dontDrop;
            end
        end
    end


    

    maxCCcol(cc) = maxCCc;
    minCCcol(cc) = minCCc;
    maxCCrow(cc) = maxCCr;
    minCCrow(cc) = minCCr;
    medCC(cc) = CCmed;
    if Lcand(cc)
        avgRGB(cc,:) = [mean(Ir(L==cc)),mean(Ig(L==cc)),mean(Ib(L==cc))];
        avgHSV(cc,:) = [mean(Ih(L==cc)),mean(Is(L==cc)),mean(Iv(L==cc))];
        avgGRAY(cc,:) = mean(Igray(L==cc));

        B = L==cc;
%         B(minCCrow(cc):maxCCrow(cc),minCCcol(cc):maxCCcol(cc)) = 1;
%         B = B & ~(L==cc);
        B = B & ~(L==cc);
        B(max(minCCrow(cc)-2,1):min(maxCCrow(cc)+2,size(B,1)),max(minCCcol(cc)-2,1):min(maxCCcol(cc)+2,size(B,2))) = 1;
        B(minCCrow(cc):maxCCrow(cc),minCCcol(cc):maxCCcol(cc)) = 0;


        if any(any(B))
            b_avgRGB(cc,:) = [mean(Ir(B)),mean(Ig(B)),mean(Ib(B))];
            b_avgHSV(cc,:) = [mean(Ih(B)),mean(Is(B)),mean(Iv(B))];
            b_avgGRAY(cc,:) = mean(Igray(B));
        else
            b_avgRGB(cc,:) = avgRGB(cc,:);
            b_avgHSV(cc,:) = avgHSV(cc,:);
            b_avgGRAY(cc,:) =   avgGRAY(cc,:);
        end
    end
end
CCcand = find(Lcand)';